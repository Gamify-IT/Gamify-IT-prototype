resolver 127.0.0.11 valid=30s; # Docker nameserver

server {
    listen     9000;

    return 301 https://$host:9443$request_uri;
}

server {
    listen     9443 ssl;

    ssl_certificate /etc/nginx/ssl-certs/goulburn.informatik.uni-stuttgart.de/cert.crt;
    ssl_certificate_key /etc/nginx/ssl-certs/goulburn.informatik.uni-stuttgart.de/privatekey.key;

    set $landing_page landing-page-dev;
    set $keycloak keycloak-dev;
    set $overworld_backend overworld-backend-dev;
    set $chickenshock_backend chickenshock-backend-dev;
    set $crosswordpuzzle_backend crosswordpuzzle-backend-dev;
    set $finitequiz_backend finitequiz-backend-dev;
    set $bugfinder_backend bugfinder-backend-dev;
    set $towercrush_backend towercrush-backend-dev;
    set $overworld overworld-dev;
    set $git_card_game git-card-game-dev;
    set $chickenshock chickenshock-dev;
    set $crosswordpuzzle crosswordpuzzle-dev;
    set $regex_game regex-game-dev;
    set $bugfinder bugfinder-dev;
    set $finitequiz finitequiz-dev;
    set $lecturer_interface lecturer-interface-dev;
    set $towercrush towercrush-dev;
    set $third_party_license_notice third-party-license-notice-dev;

    proxy_buffer_size          128k;
    proxy_buffers            4 256k;
    proxy_busy_buffers_size    256k;

    proxy_set_header   Host $host;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Host $server_name;
    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_set_header   X-Forwarded-Port $server_port;

    location / {
        proxy_pass      http://$landing_page;
    }

    location /keycloak/ {
        proxy_pass      http://$keycloak;
    }

    location /overworld/api/ {
        rewrite    ^/overworld/(.*)$ /$1 break;
        proxy_pass      http://$overworld_backend;
    }

    location /minigames/chickenshock/api/ {
        rewrite    ^/minigames/chickenshock/(.*)$ /$1 break;
        proxy_pass      http://$chickenshock_backend;
    }

    location /minigames/crosswordpuzzle/api/ {
        rewrite    ^/minigames/crosswordpuzzle/(.*)$ /$1 break;
        proxy_pass      http://$crosswordpuzzle_backend;
    }

    location /minigames/finitequiz/api/ {
        rewrite    ^/minigames/finitequiz/(.*)$ /$1 break;
        proxy_pass      http://$finitequiz_backend;
    }

    location /minigames/bugfinder/api/ {
        rewrite    ^/minigames/bugfinder/(.*)$ /$1 break;
        proxy_pass      http://$bugfinder_backend;
    }

    location /minigames/towercrush/api/ {
        rewrite    ^/minigames/towercrush/(.*)$ /$1 break;
        proxy_pass      http://$towercrush_backend;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

    location /overworld/ {
        rewrite    ^/overworld/(.*)$ /$1 break;
        proxy_pass      http://$overworld;
    }

    location /minigames/git-card-game/ {
        rewrite    ^/minigames/finitequiz/(.*)$ /$1 break;
        proxy_pass      http://$git_card_game;
    }

    location /minigames/chickenshock/ {
        rewrite    ^/minigames/chickenshock/(.*)$ /$1 break;
        proxy_pass      http://$chickenshock;
    }

    location /minigames/crosswordpuzzle/ {
        rewrite    ^/minigames/crosswordpuzzle/(.*)$ /$1 break;
        proxy_pass      http://$crosswordpuzzle;
    }

    location /minigames/regex-game/ {
        rewrite    ^/minigames/regex-game/(.*)$ /$1 break;
        proxy_pass      http://$regex_game;
    }

    location /minigames/bugfinder/ {
        rewrite    ^/minigames/bugfinder/(.*)$ /$1 break;
        proxy_pass      http://$bugfinder;
    }

    location /minigames/finitequiz/ {
        rewrite    ^/minigames/finitequiz/(.*)$ /$1 break;
        proxy_pass      http://$finitequiz;
    }

    location /minigames/towercrush/ {
        rewrite    ^/minigames/towercrush/(.*)$ /$1 break;
        proxy_pass      http://$towercrush;
    }

    location /lecturer-interface/ {
        rewrite    ^/lecturer-interface/(.*)$ /$1 break;
        proxy_pass      http://$lecturer_interface;
    }

    location /third-party-license-notice/ {
        rewrite    ^/third-party-license-notice/(.*)$ /$1 break;
        proxy_pass      http://$third_party_license_notice;
    }

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
