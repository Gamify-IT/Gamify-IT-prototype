version: "3.7"

services:

  #databases
  login-db:
      container_name: login-db
      image: postgres:14-alpine
      restart: always
      expose:
        - "5432"
      volumes:
      - ./data/login-db:/var/lib/postgresql/data
      restart: always
      environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=super_secure_password


  #backends
  login-backend:
    container_name: login-backend
    image: ghcr.io/gamify-it/login-backend:latest
    restart: always
    expose:
      - "4000"
    depends_on:
      - login-db
    environment:
      - JWT_KEY=SecretKEY
      - JWT_VALIDITY_DURATION=720h
      - POSTGRES_URL=postgresql://postgres:super_secure_password@login-db:5432/


  #frontends
  login-frontend:
    container_name: login-frontend
    image: ghcr.io/gamify-it/login-frontend:latest
    restart: always
    expose:
      - "8000"

  overworld:
    container_name: overworld
    image: ghcr.io/gamify-it/overworld-demo:latest
    restart: always
    expose:
      - "1234"

  git-card-game:
    container_name: git-card-game
    image: ghcr.io/gamify-it/git-card-game:latest
    restart: always
    expose:
      - "7001"

  moorhuhn:
    container_name: moorhuhn
    image: ghcr.io/gamify-it/moorhuhn:latest
    restart: always
    expose:
      - "80"

  crosswordpuzzle:
    container_name: crosswordpuzzle
    image: ghcr.io/gamify-it/crosswordpuzzle:latest
    restart: always
    expose:
      - "80"

  regex-game:
    container_name: regex-game
    image: ghcr.io/gamify-it/regex-game:latest
    restart: always
    expose:
      - "80"

  bugfinder:
    container_name: bugfinder
    image: ghcr.io/gamify-it/bugfinder:latest
    restart: always
    expose:
      - "80"

  lecturer-interface:
    container_name: lecturer-interface
    image: ghcr.io/gamify-it/lecturer-interface:latest
    restart: always
    expose:
      - "80"

  # reverse-proxy
  reverse-proxy:
    container_name: reverse-proxy
    image: nginx
    restart: always
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    ports:
      - "80:80"
      - "443:443"


  #updater
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    restart: always
    command: --interval 300
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  